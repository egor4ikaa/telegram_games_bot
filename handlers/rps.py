# handlers/rps.py
import random
from aiogram import Router, types
from aiogram.fsm.context import FSMContext
from aiogram.fsm.state import State, StatesGroup
from keyboards.reply import rps_buttons, main_menu, remove_kb

router = Router()

class RPSGame(StatesGroup):
    playing = State()

choices = ["ü™® –ö–∞–º–µ–Ω—å", "‚úÇÔ∏è –ù–æ–∂–Ω–∏—Ü—ã", "üìÑ –ë—É–º–∞–≥–∞"]
bot_choices = ["ü™®", "‚úÇÔ∏è", "üìÑ"]

@router.message(lambda message: message.text == "üéÆ –ö–∞–º–µ–Ω—å, –Ω–æ–∂–Ω–∏—Ü—ã, –±—É–º–∞–≥–∞")
async def start_rps(message: types.Message, state: FSMContext):
    await state.set_state(RPSGame.playing)
    await message.answer("–í—ã–±–µ—Ä–∏ —Å–≤–æ–π —Ö–æ–¥:", reply_markup=rps_buttons)

@router.message(RPSGame.playing)
async def play_rps(message: types.Message, state: FSMContext):
    user_choice = message.text
    if user_choice == "üîô –ù–∞–∑–∞–¥":
        await state.clear()
        await message.answer("–í—ã –≤–µ—Ä–Ω—É–ª–∏—Å—å –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é.", reply_markup=main_menu)
        return

    if user_choice not in choices:
        await message.answer("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –∏—Å–ø–æ–ª—å–∑—É–π –∫–Ω–æ–ø–∫–∏.", reply_markup=rps_buttons)
        return

    bot_choice = random.choice(bot_choices)
    user_index = choices.index(user_choice)
    bot_index = bot_choices.index(bot_choice)

    # –ü—Ä–µ–æ–±—Ä–∞–∑—É–µ–º –≤ —á–∏—Å–ª–∞ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è: 0 - –∫–∞–º–µ–Ω—å, 1 - –Ω–æ–∂–Ω–∏—Ü—ã, 2 - –±—É–º–∞–≥–∞
    if user_index == bot_index:
        result = "ü§ù –ù–∏—á—å—è!"
    elif (user_index - bot_index) % 3 == 1:
        result = "ü§ñ –ë–æ—Ç –ø–æ–±–µ–¥–∏–ª!"
    else:
        result = "üéâ –¢—ã –ø–æ–±–µ–¥–∏–ª!"

    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç –∏ **—Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É**
    await message.answer(
        f"–¢–≤–æ–π –≤—ã–±–æ—Ä: {user_choice}\n"
        f"–í—ã–±–æ—Ä –±–æ—Ç–∞: {bot_choice}\n\n"
        f"{result}",
        reply_markup=remove_kb  # ‚Üê —Å–∫—Ä—ã–≤–∞–µ–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
    )



    # –ü—Ä–µ–¥–ª–∞–≥–∞–µ–º —Å—ã–≥—Ä–∞—Ç—å —Å–Ω–æ–≤–∞
    await message.answer("–•–æ—á–µ—à—å —Å—ã–≥—Ä–∞—Ç—å –µ—â—ë?", reply_markup=rps_buttons)